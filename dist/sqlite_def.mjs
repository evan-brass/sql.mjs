// `grep -E "#define" vendor/sqlite.h > dist/sqlite_def.mjs` then manually edit
export const SQLITE_VERSION =        "3.43.0"
export const SQLITE_VERSION_NUMBER = 3043000
export const SQLITE_SOURCE_ID =      "2023-08-24 12:36:59 0f80b798b3f4b81a7bb4233c58294edd0f1156f36b6ecf5ab8e83631d468778c"
export const SQLITE_OK =           0   /* Successful result */
export const SQLITE_ERROR =        1   /* Generic error */
export const SQLITE_INTERNAL =     2   /* Internal logic error in SQLite */
export const SQLITE_PERM =         3   /* Access permission denied */
export const SQLITE_ABORT =        4   /* Callback routine requested an abort */
export const SQLITE_BUSY =         5   /* The database file is locked */
export const SQLITE_LOCKED =       6   /* A table in the database is locked */
export const SQLITE_NOMEM =        7   /* A malloc() failed */
export const SQLITE_READONLY =     8   /* Attempt to write a readonly database */
export const SQLITE_INTERRUPT =    9   /* Operation terminated by sqlite3_interrupt()*/
export const SQLITE_IOERR =       10   /* Some kind of disk I/O error occurred */
export const SQLITE_CORRUPT =     11   /* The database disk image is malformed */
export const SQLITE_NOTFOUND =    12   /* Unknown opcode in sqlite3_file_control() */
export const SQLITE_FULL =        13   /* Insertion failed because database is full */
export const SQLITE_CANTOPEN =    14   /* Unable to open the database file */
export const SQLITE_PROTOCOL =    15   /* Database lock protocol error */
export const SQLITE_EMPTY =       16   /* Internal use only */
export const SQLITE_SCHEMA =      17   /* The database schema changed */
export const SQLITE_TOOBIG =      18   /* String or BLOB exceeds size limit */
export const SQLITE_CONSTRAINT =  19   /* Abort due to constraint violation */
export const SQLITE_MISMATCH =    20   /* Data type mismatch */
export const SQLITE_MISUSE =      21   /* Library used incorrectly */
export const SQLITE_NOLFS =       22   /* Uses OS features not supported on host */
export const SQLITE_AUTH =        23   /* Authorization denied */
export const SQLITE_FORMAT =      24   /* Not used */
export const SQLITE_RANGE =       25   /* 2nd parameter to sqlite3_bind out of range */
export const SQLITE_NOTADB =      26   /* File opened that is not a database file */
export const SQLITE_NOTICE =      27   /* Notifications from sqlite3_log() */
export const SQLITE_WARNING =     28   /* Warnings from sqlite3_log() */
export const SQLITE_ROW =         100  /* sqlite3_step() has another row ready */
export const SQLITE_DONE =        101  /* sqlite3_step() has finished executing */
export const SQLITE_ERROR_MISSING_COLLSEQ =   (SQLITE_ERROR | (1<<8))
export const SQLITE_ERROR_RETRY =             (SQLITE_ERROR | (2<<8))
export const SQLITE_ERROR_SNAPSHOT =          (SQLITE_ERROR | (3<<8))
export const SQLITE_IOERR_READ =              (SQLITE_IOERR | (1<<8))
export const SQLITE_IOERR_SHORT_READ =        (SQLITE_IOERR | (2<<8))
export const SQLITE_IOERR_WRITE =             (SQLITE_IOERR | (3<<8))
export const SQLITE_IOERR_FSYNC =             (SQLITE_IOERR | (4<<8))
export const SQLITE_IOERR_DIR_FSYNC =         (SQLITE_IOERR | (5<<8))
export const SQLITE_IOERR_TRUNCATE =          (SQLITE_IOERR | (6<<8))
export const SQLITE_IOERR_FSTAT =             (SQLITE_IOERR | (7<<8))
export const SQLITE_IOERR_UNLOCK =            (SQLITE_IOERR | (8<<8))
export const SQLITE_IOERR_RDLOCK =            (SQLITE_IOERR | (9<<8))
export const SQLITE_IOERR_DELETE =            (SQLITE_IOERR | (10<<8))
export const SQLITE_IOERR_BLOCKED =           (SQLITE_IOERR | (11<<8))
export const SQLITE_IOERR_NOMEM =             (SQLITE_IOERR | (12<<8))
export const SQLITE_IOERR_ACCESS =            (SQLITE_IOERR | (13<<8))
export const SQLITE_IOERR_CHECKRESERVEDLOCK = (SQLITE_IOERR | (14<<8))
export const SQLITE_IOERR_LOCK =              (SQLITE_IOERR | (15<<8))
export const SQLITE_IOERR_CLOSE =             (SQLITE_IOERR | (16<<8))
export const SQLITE_IOERR_DIR_CLOSE =         (SQLITE_IOERR | (17<<8))
export const SQLITE_IOERR_SHMOPEN =           (SQLITE_IOERR | (18<<8))
export const SQLITE_IOERR_SHMSIZE =           (SQLITE_IOERR | (19<<8))
export const SQLITE_IOERR_SHMLOCK =           (SQLITE_IOERR | (20<<8))
export const SQLITE_IOERR_SHMMAP =            (SQLITE_IOERR | (21<<8))
export const SQLITE_IOERR_SEEK =              (SQLITE_IOERR | (22<<8))
export const SQLITE_IOERR_DELETE_NOENT =      (SQLITE_IOERR | (23<<8))
export const SQLITE_IOERR_MMAP =              (SQLITE_IOERR | (24<<8))
export const SQLITE_IOERR_GETTEMPPATH =       (SQLITE_IOERR | (25<<8))
export const SQLITE_IOERR_CONVPATH =          (SQLITE_IOERR | (26<<8))
export const SQLITE_IOERR_VNODE =             (SQLITE_IOERR | (27<<8))
export const SQLITE_IOERR_AUTH =              (SQLITE_IOERR | (28<<8))
export const SQLITE_IOERR_BEGIN_ATOMIC =      (SQLITE_IOERR | (29<<8))
export const SQLITE_IOERR_COMMIT_ATOMIC =     (SQLITE_IOERR | (30<<8))
export const SQLITE_IOERR_ROLLBACK_ATOMIC =   (SQLITE_IOERR | (31<<8))
export const SQLITE_IOERR_DATA =              (SQLITE_IOERR | (32<<8))
export const SQLITE_IOERR_CORRUPTFS =         (SQLITE_IOERR | (33<<8))
export const SQLITE_IOERR_IN_PAGE =           (SQLITE_IOERR | (34<<8))
export const SQLITE_LOCKED_SHAREDCACHE =      (SQLITE_LOCKED |  (1<<8))
export const SQLITE_LOCKED_VTAB =             (SQLITE_LOCKED |  (2<<8))
export const SQLITE_BUSY_RECOVERY =           (SQLITE_BUSY   |  (1<<8))
export const SQLITE_BUSY_SNAPSHOT =           (SQLITE_BUSY   |  (2<<8))
export const SQLITE_BUSY_TIMEOUT =            (SQLITE_BUSY   |  (3<<8))
export const SQLITE_CANTOPEN_NOTEMPDIR =      (SQLITE_CANTOPEN | (1<<8))
export const SQLITE_CANTOPEN_ISDIR =          (SQLITE_CANTOPEN | (2<<8))
export const SQLITE_CANTOPEN_FULLPATH =       (SQLITE_CANTOPEN | (3<<8))
export const SQLITE_CANTOPEN_CONVPATH =       (SQLITE_CANTOPEN | (4<<8))
export const SQLITE_CANTOPEN_DIRTYWAL =       (SQLITE_CANTOPEN | (5<<8)) /* Not Used */
export const SQLITE_CANTOPEN_SYMLINK =        (SQLITE_CANTOPEN | (6<<8))
export const SQLITE_CORRUPT_VTAB =            (SQLITE_CORRUPT | (1<<8))
export const SQLITE_CORRUPT_SEQUENCE =        (SQLITE_CORRUPT | (2<<8))
export const SQLITE_CORRUPT_INDEX =           (SQLITE_CORRUPT | (3<<8))
export const SQLITE_READONLY_RECOVERY =       (SQLITE_READONLY | (1<<8))
export const SQLITE_READONLY_CANTLOCK =       (SQLITE_READONLY | (2<<8))
export const SQLITE_READONLY_ROLLBACK =       (SQLITE_READONLY | (3<<8))
export const SQLITE_READONLY_DBMOVED =        (SQLITE_READONLY | (4<<8))
export const SQLITE_READONLY_CANTINIT =       (SQLITE_READONLY | (5<<8))
export const SQLITE_READONLY_DIRECTORY =      (SQLITE_READONLY | (6<<8))
export const SQLITE_ABORT_ROLLBACK =          (SQLITE_ABORT | (2<<8))
export const SQLITE_CONSTRAINT_CHECK =        (SQLITE_CONSTRAINT | (1<<8))
export const SQLITE_CONSTRAINT_COMMITHOOK =   (SQLITE_CONSTRAINT | (2<<8))
export const SQLITE_CONSTRAINT_FOREIGNKEY =   (SQLITE_CONSTRAINT | (3<<8))
export const SQLITE_CONSTRAINT_FUNCTION =     (SQLITE_CONSTRAINT | (4<<8))
export const SQLITE_CONSTRAINT_NOTNULL =      (SQLITE_CONSTRAINT | (5<<8))
export const SQLITE_CONSTRAINT_PRIMARYKEY =   (SQLITE_CONSTRAINT | (6<<8))
export const SQLITE_CONSTRAINT_TRIGGER =      (SQLITE_CONSTRAINT | (7<<8))
export const SQLITE_CONSTRAINT_UNIQUE =       (SQLITE_CONSTRAINT | (8<<8))
export const SQLITE_CONSTRAINT_VTAB =         (SQLITE_CONSTRAINT | (9<<8))
export const SQLITE_CONSTRAINT_ROWID =        (SQLITE_CONSTRAINT |(10<<8))
export const SQLITE_CONSTRAINT_PINNED =       (SQLITE_CONSTRAINT |(11<<8))
export const SQLITE_CONSTRAINT_DATATYPE =     (SQLITE_CONSTRAINT |(12<<8))
export const SQLITE_NOTICE_RECOVER_WAL =      (SQLITE_NOTICE | (1<<8))
export const SQLITE_NOTICE_RECOVER_ROLLBACK = (SQLITE_NOTICE | (2<<8))
export const SQLITE_NOTICE_RBU =              (SQLITE_NOTICE | (3<<8))
export const SQLITE_WARNING_AUTOINDEX =       (SQLITE_WARNING | (1<<8))
export const SQLITE_AUTH_USER =               (SQLITE_AUTH | (1<<8))
export const SQLITE_OK_LOAD_PERMANENTLY =     (SQLITE_OK | (1<<8))
export const SQLITE_OK_SYMLINK =              (SQLITE_OK | (2<<8)) /* internal use only */
export const SQLITE_OPEN_READONLY =         0x00000001  /* Ok for sqlite3_open_v2() */
export const SQLITE_OPEN_READWRITE =        0x00000002  /* Ok for sqlite3_open_v2() */
export const SQLITE_OPEN_CREATE =           0x00000004  /* Ok for sqlite3_open_v2() */
export const SQLITE_OPEN_DELETEONCLOSE =    0x00000008  /* VFS only */
export const SQLITE_OPEN_EXCLUSIVE =        0x00000010  /* VFS only */
export const SQLITE_OPEN_AUTOPROXY =        0x00000020  /* VFS only */
export const SQLITE_OPEN_URI =              0x00000040  /* Ok for sqlite3_open_v2() */
export const SQLITE_OPEN_MEMORY =           0x00000080  /* Ok for sqlite3_open_v2() */
export const SQLITE_OPEN_MAIN_DB =          0x00000100  /* VFS only */
export const SQLITE_OPEN_TEMP_DB =          0x00000200  /* VFS only */
export const SQLITE_OPEN_TRANSIENT_DB =     0x00000400  /* VFS only */
export const SQLITE_OPEN_MAIN_JOURNAL =     0x00000800  /* VFS only */
export const SQLITE_OPEN_TEMP_JOURNAL =     0x00001000  /* VFS only */
export const SQLITE_OPEN_SUBJOURNAL =       0x00002000  /* VFS only */
export const SQLITE_OPEN_SUPER_JOURNAL =    0x00004000  /* VFS only */
export const SQLITE_OPEN_NOMUTEX =          0x00008000  /* Ok for sqlite3_open_v2() */
export const SQLITE_OPEN_FULLMUTEX =        0x00010000  /* Ok for sqlite3_open_v2() */
export const SQLITE_OPEN_SHAREDCACHE =      0x00020000  /* Ok for sqlite3_open_v2() */
export const SQLITE_OPEN_PRIVATECACHE =     0x00040000  /* Ok for sqlite3_open_v2() */
export const SQLITE_OPEN_WAL =              0x00080000  /* VFS only */
export const SQLITE_OPEN_NOFOLLOW =         0x01000000  /* Ok for sqlite3_open_v2() */
export const SQLITE_OPEN_EXRESCODE =        0x02000000  /* Extended result codes */
export const SQLITE_OPEN_MASTER_JOURNAL =   0x00004000  /* VFS only */
export const SQLITE_IOCAP_ATOMIC =                 0x00000001
export const SQLITE_IOCAP_ATOMIC512 =              0x00000002
export const SQLITE_IOCAP_ATOMIC1K =               0x00000004
export const SQLITE_IOCAP_ATOMIC2K =               0x00000008
export const SQLITE_IOCAP_ATOMIC4K =               0x00000010
export const SQLITE_IOCAP_ATOMIC8K =               0x00000020
export const SQLITE_IOCAP_ATOMIC16K =              0x00000040
export const SQLITE_IOCAP_ATOMIC32K =              0x00000080
export const SQLITE_IOCAP_ATOMIC64K =              0x00000100
export const SQLITE_IOCAP_SAFE_APPEND =            0x00000200
export const SQLITE_IOCAP_SEQUENTIAL =             0x00000400
export const SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN =  0x00000800
export const SQLITE_IOCAP_POWERSAFE_OVERWRITE =    0x00001000
export const SQLITE_IOCAP_IMMUTABLE =              0x00002000
export const SQLITE_IOCAP_BATCH_ATOMIC =           0x00004000
export const SQLITE_LOCK_NONE =          0       /* xUnlock() only */
export const SQLITE_LOCK_SHARED =        1       /* xLock() or xUnlock() */
export const SQLITE_LOCK_RESERVED =      2       /* xLock() only */
export const SQLITE_LOCK_PENDING =       3       /* xLock() only */
export const SQLITE_LOCK_EXCLUSIVE =     4       /* xLock() only */
export const SQLITE_SYNC_NORMAL =        0x00002
export const SQLITE_SYNC_FULL =          0x00003
export const SQLITE_SYNC_DATAONLY =      0x00010
export const SQLITE_FCNTL_LOCKSTATE =               1
export const SQLITE_FCNTL_GET_LOCKPROXYFILE =       2
export const SQLITE_FCNTL_SET_LOCKPROXYFILE =       3
export const SQLITE_FCNTL_LAST_ERRNO =              4
export const SQLITE_FCNTL_SIZE_HINT =               5
export const SQLITE_FCNTL_CHUNK_SIZE =              6
export const SQLITE_FCNTL_FILE_POINTER =            7
export const SQLITE_FCNTL_SYNC_OMITTED =            8
export const SQLITE_FCNTL_WIN32_AV_RETRY =          9
export const SQLITE_FCNTL_PERSIST_WAL =            10
export const SQLITE_FCNTL_OVERWRITE =              11
export const SQLITE_FCNTL_VFSNAME =                12
export const SQLITE_FCNTL_POWERSAFE_OVERWRITE =    13
export const SQLITE_FCNTL_PRAGMA =                 14
export const SQLITE_FCNTL_BUSYHANDLER =            15
export const SQLITE_FCNTL_TEMPFILENAME =           16
export const SQLITE_FCNTL_MMAP_SIZE =              18
export const SQLITE_FCNTL_TRACE =                  19
export const SQLITE_FCNTL_HAS_MOVED =              20
export const SQLITE_FCNTL_SYNC =                   21
export const SQLITE_FCNTL_COMMIT_PHASETWO =        22
export const SQLITE_FCNTL_WIN32_SET_HANDLE =       23
export const SQLITE_FCNTL_WAL_BLOCK =              24
export const SQLITE_FCNTL_ZIPVFS =                 25
export const SQLITE_FCNTL_RBU =                    26
export const SQLITE_FCNTL_VFS_POINTER =            27
export const SQLITE_FCNTL_JOURNAL_POINTER =        28
export const SQLITE_FCNTL_WIN32_GET_HANDLE =       29
export const SQLITE_FCNTL_PDB =                    30
export const SQLITE_FCNTL_BEGIN_ATOMIC_WRITE =     31
export const SQLITE_FCNTL_COMMIT_ATOMIC_WRITE =    32
export const SQLITE_FCNTL_ROLLBACK_ATOMIC_WRITE =  33
export const SQLITE_FCNTL_LOCK_TIMEOUT =           34
export const SQLITE_FCNTL_DATA_VERSION =           35
export const SQLITE_FCNTL_SIZE_LIMIT =             36
export const SQLITE_FCNTL_CKPT_DONE =              37
export const SQLITE_FCNTL_RESERVE_BYTES =          38
export const SQLITE_FCNTL_CKPT_START =             39
export const SQLITE_FCNTL_EXTERNAL_READER =        40
export const SQLITE_FCNTL_CKSM_FILE =              41
export const SQLITE_FCNTL_RESET_CACHE =            42
export const SQLITE_GET_LOCKPROXYFILE =      SQLITE_FCNTL_GET_LOCKPROXYFILE
export const SQLITE_SET_LOCKPROXYFILE =      SQLITE_FCNTL_SET_LOCKPROXYFILE
export const SQLITE_LAST_ERRNO =             SQLITE_FCNTL_LAST_ERRNO
export const SQLITE_ACCESS_EXISTS =    0
export const SQLITE_ACCESS_READWRITE = 1   /* Used by PRAGMA temp_store_directory */
export const SQLITE_ACCESS_READ =      2   /* Unused */
export const SQLITE_SHM_UNLOCK =       1
export const SQLITE_SHM_LOCK =         2
export const SQLITE_SHM_SHARED =       4
export const SQLITE_SHM_EXCLUSIVE =    8
export const SQLITE_SHM_NLOCK =        8
export const SQLITE_CONFIG_SINGLETHREAD =         1  /* nil */
export const SQLITE_CONFIG_MULTITHREAD =          2  /* nil */
export const SQLITE_CONFIG_SERIALIZED =           3  /* nil */
export const SQLITE_CONFIG_MALLOC =               4  /* sqlite3_mem_methods* */
export const SQLITE_CONFIG_GETMALLOC =            5  /* sqlite3_mem_methods* */
export const SQLITE_CONFIG_SCRATCH =              6  /* No longer used */
export const SQLITE_CONFIG_PAGECACHE =            7  /* void*, int sz, int N */
export const SQLITE_CONFIG_HEAP =                 8  /* void*, int nByte, int min */
export const SQLITE_CONFIG_MEMSTATUS =            9  /* boolean */
export const SQLITE_CONFIG_MUTEX =               10  /* sqlite3_mutex_methods* */
export const SQLITE_CONFIG_GETMUTEX =            11  /* sqlite3_mutex_methods* */
export const SQLITE_CONFIG_LOOKASIDE =           13  /* int int */
export const SQLITE_CONFIG_PCACHE =              14  /* no-op */
export const SQLITE_CONFIG_GETPCACHE =           15  /* no-op */
export const SQLITE_CONFIG_LOG =                 16  /* xFunc, void* */
export const SQLITE_CONFIG_URI =                 17  /* int */
export const SQLITE_CONFIG_PCACHE2 =             18  /* sqlite3_pcache_methods2* */
export const SQLITE_CONFIG_GETPCACHE2 =          19  /* sqlite3_pcache_methods2* */
export const SQLITE_CONFIG_COVERING_INDEX_SCAN = 20  /* int */
export const SQLITE_CONFIG_SQLLOG =              21  /* xSqllog, void* */
export const SQLITE_CONFIG_MMAP_SIZE =           22  /* sqlite3_int64, sqlite3_int64 */
export const SQLITE_CONFIG_WIN32_HEAPSIZE =      23  /* int nByte */
export const SQLITE_CONFIG_PCACHE_HDRSZ =        24  /* int *psz */
export const SQLITE_CONFIG_PMASZ =               25  /* unsigned int szPma */
export const SQLITE_CONFIG_STMTJRNL_SPILL =      26  /* int nByte */
export const SQLITE_CONFIG_SMALL_MALLOC =        27  /* boolean */
export const SQLITE_CONFIG_SORTERREF_SIZE =      28  /* int nByte */
export const SQLITE_CONFIG_MEMDB_MAXSIZE =       29  /* sqlite3_int64 */
export const SQLITE_DBCONFIG_MAINDBNAME =            1000 /* const char* */
export const SQLITE_DBCONFIG_LOOKASIDE =             1001 /* void* int int */
export const SQLITE_DBCONFIG_ENABLE_FKEY =           1002 /* int int* */
export const SQLITE_DBCONFIG_ENABLE_TRIGGER =        1003 /* int int* */
export const SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER = 1004 /* int int* */
export const SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION = 1005 /* int int* */
export const SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE =      1006 /* int int* */
export const SQLITE_DBCONFIG_ENABLE_QPSG =           1007 /* int int* */
export const SQLITE_DBCONFIG_TRIGGER_EQP =           1008 /* int int* */
export const SQLITE_DBCONFIG_RESET_DATABASE =        1009 /* int int* */
export const SQLITE_DBCONFIG_DEFENSIVE =             1010 /* int int* */
export const SQLITE_DBCONFIG_WRITABLE_SCHEMA =       1011 /* int int* */
export const SQLITE_DBCONFIG_LEGACY_ALTER_TABLE =    1012 /* int int* */
export const SQLITE_DBCONFIG_DQS_DML =               1013 /* int int* */
export const SQLITE_DBCONFIG_DQS_DDL =               1014 /* int int* */
export const SQLITE_DBCONFIG_ENABLE_VIEW =           1015 /* int int* */
export const SQLITE_DBCONFIG_LEGACY_FILE_FORMAT =    1016 /* int int* */
export const SQLITE_DBCONFIG_TRUSTED_SCHEMA =        1017 /* int int* */
export const SQLITE_DBCONFIG_STMT_SCANSTATUS =       1018 /* int int* */
export const SQLITE_DBCONFIG_REVERSE_SCANORDER =     1019 /* int int* */
export const SQLITE_DBCONFIG_MAX =                   1019 /* Largest DBCONFIG */
export const SQLITE_DENY =   1   /* Abort the SQL statement with an error */
export const SQLITE_IGNORE = 2   /* Don't allow access, but don't generate an error */
export const SQLITE_CREATE_INDEX =          1   /* Index Name      Table Name      */
export const SQLITE_CREATE_TABLE =          2   /* Table Name      NULL            */
export const SQLITE_CREATE_TEMP_INDEX =     3   /* Index Name      Table Name      */
export const SQLITE_CREATE_TEMP_TABLE =     4   /* Table Name      NULL            */
export const SQLITE_CREATE_TEMP_TRIGGER =   5   /* Trigger Name    Table Name      */
export const SQLITE_CREATE_TEMP_VIEW =      6   /* View Name       NULL            */
export const SQLITE_CREATE_TRIGGER =        7   /* Trigger Name    Table Name      */
export const SQLITE_CREATE_VIEW =           8   /* View Name       NULL            */
export const SQLITE_DELETE =                9   /* Table Name      NULL            */
export const SQLITE_DROP_INDEX =           10   /* Index Name      Table Name      */
export const SQLITE_DROP_TABLE =           11   /* Table Name      NULL            */
export const SQLITE_DROP_TEMP_INDEX =      12   /* Index Name      Table Name      */
export const SQLITE_DROP_TEMP_TABLE =      13   /* Table Name      NULL            */
export const SQLITE_DROP_TEMP_TRIGGER =    14   /* Trigger Name    Table Name      */
export const SQLITE_DROP_TEMP_VIEW =       15   /* View Name       NULL            */
export const SQLITE_DROP_TRIGGER =         16   /* Trigger Name    Table Name      */
export const SQLITE_DROP_VIEW =            17   /* View Name       NULL            */
export const SQLITE_INSERT =               18   /* Table Name      NULL            */
export const SQLITE_PRAGMA =               19   /* Pragma Name     1st arg or NULL */
export const SQLITE_READ =                 20   /* Table Name      Column Name     */
export const SQLITE_SELECT =               21   /* NULL            NULL            */
export const SQLITE_TRANSACTION =          22   /* Operation       NULL            */
export const SQLITE_UPDATE =               23   /* Table Name      Column Name     */
export const SQLITE_ATTACH =               24   /* Filename        NULL            */
export const SQLITE_DETACH =               25   /* Database Name   NULL            */
export const SQLITE_ALTER_TABLE =          26   /* Database Name   Table Name      */
export const SQLITE_REINDEX =              27   /* Index Name      NULL            */
export const SQLITE_ANALYZE =              28   /* Table Name      NULL            */
export const SQLITE_CREATE_VTABLE =        29   /* Table Name      Module Name     */
export const SQLITE_DROP_VTABLE =          30   /* Table Name      Module Name     */
export const SQLITE_FUNCTION =             31   /* NULL            Function Name   */
export const SQLITE_SAVEPOINT =            32   /* Operation       Savepoint Name  */
export const SQLITE_COPY =                  0   /* No longer used */
export const SQLITE_RECURSIVE =            33   /* NULL            NULL            */
export const SQLITE_TRACE_STMT =       0x01
export const SQLITE_TRACE_PROFILE =    0x02
export const SQLITE_TRACE_ROW =        0x04
export const SQLITE_TRACE_CLOSE =      0x08
export const SQLITE_LIMIT_LENGTH =                    0
export const SQLITE_LIMIT_SQL_LENGTH =                1
export const SQLITE_LIMIT_COLUMN =                    2
export const SQLITE_LIMIT_EXPR_DEPTH =                3
export const SQLITE_LIMIT_COMPOUND_SELECT =           4
export const SQLITE_LIMIT_VDBE_OP =                   5
export const SQLITE_LIMIT_FUNCTION_ARG =              6
export const SQLITE_LIMIT_ATTACHED =                  7
export const SQLITE_LIMIT_LIKE_PATTERN_LENGTH =       8
export const SQLITE_LIMIT_VARIABLE_NUMBER =           9
export const SQLITE_LIMIT_TRIGGER_DEPTH =            10
export const SQLITE_LIMIT_WORKER_THREADS =           11
export const SQLITE_PREPARE_PERSISTENT =              0x01
export const SQLITE_PREPARE_NORMALIZE =               0x02
export const SQLITE_PREPARE_NO_VTAB =                 0x04
export const SQLITE_INTEGER =  1
export const SQLITE_FLOAT =    2
export const SQLITE_BLOB =     4
export const SQLITE_NULL =     5
export const SQLITE3_TEXT =     3
export const SQLITE_UTF8 =           1    /* IMP: R-37514-35566 */
export const SQLITE_UTF16LE =        2    /* IMP: R-03371-37637 */
export const SQLITE_UTF16BE =        3    /* IMP: R-51971-34154 */
export const SQLITE_UTF16 =          4    /* Use native byte order */
export const SQLITE_ANY =            5    /* Deprecated */
export const SQLITE_UTF16_ALIGNED =  8    /* sqlite3_create_collation only */
export const SQLITE_DETERMINISTIC =    0x000000800
export const SQLITE_DIRECTONLY =       0x000080000
export const SQLITE_SUBTYPE =          0x000100000
export const SQLITE_INNOCUOUS =        0x000200000
export const SQLITE_STATIC =      0
export const SQLITE_TRANSIENT =   -1
export const SQLITE_WIN32_DATA_DIRECTORY_TYPE =  1
export const SQLITE_WIN32_TEMP_DIRECTORY_TYPE =  2
export const SQLITE_TXN_NONE =  0
export const SQLITE_TXN_READ =  1
export const SQLITE_TXN_WRITE = 2
export const SQLITE_INDEX_SCAN_UNIQUE =      1     /* Scan visits at most 1 row */
export const SQLITE_INDEX_CONSTRAINT_EQ =          2
export const SQLITE_INDEX_CONSTRAINT_GT =          4
export const SQLITE_INDEX_CONSTRAINT_LE =          8
export const SQLITE_INDEX_CONSTRAINT_LT =         16
export const SQLITE_INDEX_CONSTRAINT_GE =         32
export const SQLITE_INDEX_CONSTRAINT_MATCH =      64
export const SQLITE_INDEX_CONSTRAINT_LIKE =       65
export const SQLITE_INDEX_CONSTRAINT_GLOB =       66
export const SQLITE_INDEX_CONSTRAINT_REGEXP =     67
export const SQLITE_INDEX_CONSTRAINT_NE =         68
export const SQLITE_INDEX_CONSTRAINT_ISNOT =      69
export const SQLITE_INDEX_CONSTRAINT_ISNOTNULL =  70
export const SQLITE_INDEX_CONSTRAINT_ISNULL =     71
export const SQLITE_INDEX_CONSTRAINT_IS =         72
export const SQLITE_INDEX_CONSTRAINT_LIMIT =      73
export const SQLITE_INDEX_CONSTRAINT_OFFSET =     74
export const SQLITE_INDEX_CONSTRAINT_FUNCTION =  150
export const SQLITE_MUTEX_FAST =             0
export const SQLITE_MUTEX_RECURSIVE =        1
export const SQLITE_MUTEX_STATIC_MAIN =      2
export const SQLITE_MUTEX_STATIC_MEM =       3  /* sqlite3_malloc() */
export const SQLITE_MUTEX_STATIC_MEM2 =      4  /* NOT USED */
export const SQLITE_MUTEX_STATIC_OPEN =      4  /* sqlite3BtreeOpen() */
export const SQLITE_MUTEX_STATIC_PRNG =      5  /* sqlite3_randomness() */
export const SQLITE_MUTEX_STATIC_LRU =       6  /* lru page list */
export const SQLITE_MUTEX_STATIC_LRU2 =      7  /* NOT USED */
export const SQLITE_MUTEX_STATIC_PMEM =      7  /* sqlite3PageMalloc() */
export const SQLITE_MUTEX_STATIC_APP1 =      8  /* For use by application */
export const SQLITE_MUTEX_STATIC_APP2 =      9  /* For use by application */
export const SQLITE_MUTEX_STATIC_APP3 =     10  /* For use by application */
export const SQLITE_MUTEX_STATIC_VFS1 =     11  /* For use by built-in VFS */
export const SQLITE_MUTEX_STATIC_VFS2 =     12  /* For use by extension VFS */
export const SQLITE_MUTEX_STATIC_VFS3 =     13  /* For use by application VFS */
export const SQLITE_MUTEX_STATIC_MASTER =    2
export const SQLITE_TESTCTRL_FIRST =                    5
export const SQLITE_TESTCTRL_PRNG_SAVE =                5
export const SQLITE_TESTCTRL_PRNG_RESTORE =             6
export const SQLITE_TESTCTRL_PRNG_RESET =               7  /* NOT USED */
export const SQLITE_TESTCTRL_BITVEC_TEST =              8
export const SQLITE_TESTCTRL_FAULT_INSTALL =            9
export const SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS =     10
export const SQLITE_TESTCTRL_PENDING_BYTE =            11
export const SQLITE_TESTCTRL_ASSERT =                  12
export const SQLITE_TESTCTRL_ALWAYS =                  13
export const SQLITE_TESTCTRL_RESERVE =                 14  /* NOT USED */
export const SQLITE_TESTCTRL_OPTIMIZATIONS =           15
export const SQLITE_TESTCTRL_ISKEYWORD =               16  /* NOT USED */
export const SQLITE_TESTCTRL_SCRATCHMALLOC =           17  /* NOT USED */
export const SQLITE_TESTCTRL_INTERNAL_FUNCTIONS =      17
export const SQLITE_TESTCTRL_LOCALTIME_FAULT =         18
export const SQLITE_TESTCTRL_EXPLAIN_STMT =            19  /* NOT USED */
export const SQLITE_TESTCTRL_ONCE_RESET_THRESHOLD =    19
export const SQLITE_TESTCTRL_NEVER_CORRUPT =           20
export const SQLITE_TESTCTRL_VDBE_COVERAGE =           21
export const SQLITE_TESTCTRL_BYTEORDER =               22
export const SQLITE_TESTCTRL_ISINIT =                  23
export const SQLITE_TESTCTRL_SORTER_MMAP =             24
export const SQLITE_TESTCTRL_IMPOSTER =                25
export const SQLITE_TESTCTRL_PARSER_COVERAGE =         26
export const SQLITE_TESTCTRL_RESULT_INTREAL =          27
export const SQLITE_TESTCTRL_PRNG_SEED =               28
export const SQLITE_TESTCTRL_EXTRA_SCHEMA_CHECKS =     29
export const SQLITE_TESTCTRL_SEEK_COUNT =              30
export const SQLITE_TESTCTRL_TRACEFLAGS =              31
export const SQLITE_TESTCTRL_TUNE =                    32
export const SQLITE_TESTCTRL_LOGEST =                  33
export const SQLITE_TESTCTRL_USELONGDOUBLE =           34
export const SQLITE_TESTCTRL_LAST =                    34  /* Largest TESTCTRL */
export const SQLITE_STATUS_MEMORY_USED =          0
export const SQLITE_STATUS_PAGECACHE_USED =       1
export const SQLITE_STATUS_PAGECACHE_OVERFLOW =   2
export const SQLITE_STATUS_SCRATCH_USED =         3  /* NOT USED */
export const SQLITE_STATUS_SCRATCH_OVERFLOW =     4  /* NOT USED */
export const SQLITE_STATUS_MALLOC_SIZE =          5
export const SQLITE_STATUS_PARSER_STACK =         6
export const SQLITE_STATUS_PAGECACHE_SIZE =       7
export const SQLITE_STATUS_SCRATCH_SIZE =         8  /* NOT USED */
export const SQLITE_STATUS_MALLOC_COUNT =         9
export const SQLITE_DBSTATUS_LOOKASIDE_USED =       0
export const SQLITE_DBSTATUS_CACHE_USED =           1
export const SQLITE_DBSTATUS_SCHEMA_USED =          2
export const SQLITE_DBSTATUS_STMT_USED =            3
export const SQLITE_DBSTATUS_LOOKASIDE_HIT =        4
export const SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE =  5
export const SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL =  6
export const SQLITE_DBSTATUS_CACHE_HIT =            7
export const SQLITE_DBSTATUS_CACHE_MISS =           8
export const SQLITE_DBSTATUS_CACHE_WRITE =          9
export const SQLITE_DBSTATUS_DEFERRED_FKS =        10
export const SQLITE_DBSTATUS_CACHE_USED_SHARED =   11
export const SQLITE_DBSTATUS_CACHE_SPILL =         12
export const SQLITE_DBSTATUS_MAX =                 12   /* Largest defined DBSTATUS */
export const SQLITE_STMTSTATUS_FULLSCAN_STEP =     1
export const SQLITE_STMTSTATUS_SORT =              2
export const SQLITE_STMTSTATUS_AUTOINDEX =         3
export const SQLITE_STMTSTATUS_VM_STEP =           4
export const SQLITE_STMTSTATUS_REPREPARE =         5
export const SQLITE_STMTSTATUS_RUN =               6
export const SQLITE_STMTSTATUS_FILTER_MISS =       7
export const SQLITE_STMTSTATUS_FILTER_HIT =        8
export const SQLITE_STMTSTATUS_MEMUSED =           99
export const SQLITE_CHECKPOINT_PASSIVE =  0  /* Do as much as possible w/o blocking */
export const SQLITE_CHECKPOINT_FULL =     1  /* Wait for writers, then checkpoint */
export const SQLITE_CHECKPOINT_RESTART =  2  /* Like FULL but wait for readers */
export const SQLITE_CHECKPOINT_TRUNCATE = 3  /* Like RESTART but also truncate WAL */
export const SQLITE_VTAB_CONSTRAINT_SUPPORT = 1
export const SQLITE_VTAB_INNOCUOUS =          2
export const SQLITE_VTAB_DIRECTONLY =         3
export const SQLITE_VTAB_USES_ALL_SCHEMAS =   4
export const SQLITE_ROLLBACK = 1
export const SQLITE_FAIL =     3
export const SQLITE_REPLACE =  5
export const SQLITE_SCANSTAT_NLOOP =    0
export const SQLITE_SCANSTAT_NVISIT =   1
export const SQLITE_SCANSTAT_EST =      2
export const SQLITE_SCANSTAT_NAME =     3
export const SQLITE_SCANSTAT_EXPLAIN =  4
export const SQLITE_SCANSTAT_SELECTID = 5
export const SQLITE_SCANSTAT_PARENTID = 6
export const SQLITE_SCANSTAT_NCYCLE =   7
export const SQLITE_SCANSTAT_COMPLEX = 0x0001
export const SQLITE_SERIALIZE_NOCOPY = 0x001   /* Do no memory allocations */
export const SQLITE_DESERIALIZE_FREEONCLOSE = 1 /* Call sqlite3_free() on close */
export const SQLITE_DESERIALIZE_RESIZEABLE =  2 /* Resize using sqlite3_realloc64() */
export const SQLITE_DESERIALIZE_READONLY =    4 /* Database is read-only */
export const NOT_WITHIN =       0   /* Object completely outside of query region */
export const PARTLY_WITHIN =    1   /* Object partially overlaps query region */
export const FULLY_WITHIN =     2   /* Object fully contained within query region */
export const SQLITE_SESSION_OBJCONFIG_SIZE =  1
export const SQLITE_SESSION_OBJCONFIG_ROWID = 2
export const SQLITE_CHANGESETSTART_INVERT =        0x0002
export const SQLITE_CHANGESETAPPLY_NOSAVEPOINT =   0x0001
export const SQLITE_CHANGESETAPPLY_INVERT =        0x0002
export const SQLITE_CHANGESETAPPLY_IGNORENOOP =    0x0004
export const SQLITE_CHANGESET_DATA =        1
export const SQLITE_CHANGESET_NOTFOUND =    2
export const SQLITE_CHANGESET_CONFLICT =    3
export const SQLITE_CHANGESET_CONSTRAINT =  4
export const SQLITE_CHANGESET_FOREIGN_KEY = 5
export const SQLITE_CHANGESET_OMIT =       0
export const SQLITE_CHANGESET_REPLACE =    1
export const SQLITE_CHANGESET_ABORT =      2
export const SQLITE_SESSION_CONFIG_STRMSIZE = 1
export const FTS5_TOKENIZE_QUERY =     0x0001
export const FTS5_TOKENIZE_PREFIX =    0x0002
export const FTS5_TOKENIZE_DOCUMENT =  0x0004
export const FTS5_TOKENIZE_AUX =       0x0008
export const FTS5_TOKEN_COLOCATED =    0x0001      /* Same position as prev. token */
